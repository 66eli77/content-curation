var Backbone = require("backbone");
var _= require("underscore");

var NodeModel = Backbone.Model.extend({
	urlRoot:'/api/node/', //use django js reverse Urls.api('house', 12)
	defaults: {
		title:"Untitled",
		description:"This is the description generated by default",
		children: []
    }
});

var NodeCollection = Backbone.Collection.extend({
	model: NodeModel,
	save: function() {
        Backbone.sync("update", this, {url: this.model.prototype.urlRoot()});
	},
	url: function(){
		console.log("root is" , this.root_node);
       return "topics/" + this.root_node;
    },
    /*use backbone's get*/
    //get_all_fetch(ids) if get call fails, fetch from server, wrap to query multiple ids at once

});
/*
var TopicTreeModel = Backbone.RelationalModel.extend({
	relations: [{
		type: 'HasMany',
		key: 'root_node',
		relatedModel: 'TopicNodeModel',
		reverseRelation: {
			key: 'topictree'
		}
	}],
	urlRoot: function() {
		return window.Urls["topictree-list"]();
	},
	defaults: {
		name: "Untitled Tree",
		is_published: false
	}
});
*/
var TopicTreeModel = Backbone.Model.extend({
	get_root: function(){
		var collection = new NodeCollection();
		collection.root_node = this.root_node;
		console.log(this.root_node);
	},
	urlRoot: function() {
		return window.Urls["topictree-list"]();
	},
	defaults: {
		name: "Untitled Tree",
		is_published: false
	}
});

var TopicTreeModelCollection = Backbone.Collection.extend({
	model: TopicTreeModel,
	save: function() {
        Backbone.sync("update", this, {url: this.model.prototype.urlRoot()});
	},
	url: function() {
		console.log("model", this);
		return window.Urls["topictree-list"]();
	}
});

var ChannelModel = Backbone.Model.extend({
	urlRoot: function() {
		return window.Urls["channel-list"]();
	},
	defaults: {
		title: "[Untitled Content]",
		name: " ",
		editors: [],
		author: "Anonymous",
		license_owner: "No license found",
		description:" "
    },
});

var ChannelCollection = Backbone.Collection.extend({
	model: ChannelModel,

	save: function() {
        Backbone.sync("update", this, {url: this.model.prototype.urlRoot()});
	},
	url: function() {
		return window.Urls["channel-list"]();
	}
});



module.exports = {
	NodeModel: NodeModel,
	NodeCollection: NodeCollection,
	TopicTreeModel:TopicTreeModel,
	TopicTreeModelCollection: TopicTreeModelCollection,
	ChannelModel: ChannelModel,
	ChannelCollection: ChannelCollection
}